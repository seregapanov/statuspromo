// components/Dashboard.jsx

import React, { useState, useEffect } from 'react';
import CampaignCard from './CampaignCard';
import ShareModal from './ShareModal';
import CreateCampaign from './CreateCampaign';
import { createClient } from '@supabase/supabase-js';

// üîß –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase
const supabaseUrl = 'https://hezxfkeflzupndlbkshi.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhlenhma2VmbHp1cG5kbGJrc2hpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNzU5MDEsImV4cCI6MjA3MjY1MTkwMX0.qJYyJinI27Zx4bvYBv9d70cs-J3QPrFcwBLNAxz91eg';
const supabase = createClient(supabaseUrl, supabaseAnonKey);

export default function Dashboard({ user, setUser }) {
  const [campaigns, setCampaigns] = useState([]);
  const [selectedCampaign, setSelectedCampaign] = useState(null);
  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);
  const [loading, setLoading] = useState(true);

  // üîÅ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π –∏–∑ –±–∞–∑—ã
  const loadCampaigns = async () => {
    setLoading(true);
    console.log('üîÑ [Dashboard] –ó–∞–ø—Ä–æ—Å –∫ Supabase: –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π...');

    try {
      const { data, error } = await supabase
        .from('campaigns')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('‚ùå [Supabase] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–º–ø–∞–Ω–∏–π:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏–∏: ' + error.message);
      } else {
        console.log('‚úÖ [Supabase] –ü–æ–ª—É—á–µ–Ω–æ –∫–∞–º–ø–∞–Ω–∏–π:', data?.length || 0);
        console.log('üìÑ –î–∞–Ω–Ω—ã–µ:', data);

        // –§–∏–ª—å—Ç—Ä: —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
        const validCampaigns = Array.isArray(data)
          ? data.filter(camp => camp && typeof camp === 'object' && camp.id)
          : [];

        console.log('‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', validCampaigns.length);
        setCampaigns(validCampaigns);
      }
    } catch (err) {
      console.error('üî• [Dashboard] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–º–ø–∞–Ω–∏–π');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadCampaigns();
  }, []);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
  const handleCreateCampaign = (newCamp) => {
    console.log('üÜï –ù–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞:', newCamp);
    setCampaigns(prev => [newCamp, ...prev]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
    setIsCreateModalOpen(false);
  };

  const handleShare = (campaign) => {
    console.log('üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è:', campaign);
    setSelectedCampaign(campaign);
  };

  const handleCloseShareModal = () => {
    setSelectedCampaign(null);
  };

  const handleShared = () => {
    console.log('‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –±–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª–µ–Ω—ã');
    setUser((prev) => ({
      ...prev,
      points: (prev.points || 0) + selectedCampaign.points_reward,
    }));
    handleCloseShareModal();
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-6xl mx-auto px-4 py-8">
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
        <div className="flex flex-col md:flex-row md:items-start md:justify-between gap-6 mb-8">
          <div>
            <h1 className="text-xl font-semibold text-gray-900">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
            </h1>
            <p className="text-sm text-gray-600 mt-1">
              –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∫–ª–∞–º–æ–π —á–µ—Ä–µ–∑ —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ
            </p>
          </div>
          <div className="bg-white px-5 py-4 rounded-xl border border-gray-200 shadow-sm min-w-48 text-center">
            <p className="text-xs text-gray-500 mb-1">–í–∞—à –±–∞–ª–∞–Ω—Å</p>
            <p className="text-lg font-semibold text-gray-900">
              {user.points || 0} <span className="text-blue-600">–±–∞–ª–ª–æ–≤</span>
            </p>
            <div className="mt-2 w-8 h-0.5 bg-blue-100 mx-auto rounded"></div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞) */}
        {user.isBusiness && (
          <div className="mb-8">
            <button
              onClick={() => setIsCreateModalOpen(true)}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg text-sm font-medium shadow-sm hover:shadow transition"
            >
              ‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
            </button>
          </div>
        )}

        {/* –ó–∞–≥—Ä—É–∑–∫–∞ */}
        {loading ? (
          <div className="text-center py-10">
            <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
            <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–º–ø–∞–Ω–∏–∏...</p>
          </div>
        ) : campaigns.length === 0 ? (
          <div className="text-center py-10 text-gray-500 text-sm bg-white rounded-xl border border-gray-200">
            –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
          </div>
        ) : (
          /* –õ–µ–Ω—Ç–∞ –∫–∞–º–ø–∞–Ω–∏–π */
          <div className="space-y-6">
            {campaigns.map((camp) => (
              <CampaignCard
                key={camp.id}
                campaign={camp}
                onShare={handleShare}
              />
            ))}
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª–∫–∏ */}
      {isCreateModalOpen && (
        <CreateCampaign
          onClose={() => setIsCreateModalOpen(false)}
          onCampaignCreated={handleCreateCampaign}
        />
      )}

      {selectedCampaign && (
        <ShareModal
          campaign={selectedCampaign}
          user={user}
          onClose={handleCloseShareModal}
          onShared={handleShared}
        />
      )}
    </div>
  );
}
